#keycloak.realm = khonshu
#keycloak.auth-server-url = http://localhost:8080/realms/khonshu/protocol/openid-connect/auth
#keycloak.ssl-required = external
#keycloak.resource = khonshuApp
#keycloak.credentials.secret = 11111111-1111-1111-1111-111111111111
#keycloak.use-resource-role-mappings = true
#keycloak.use-resource-role-mappings = true

server.port=9000
spring.security.oauth2.client.registration.oauth2-client-credentials.client-id=khonshu-ms
spring.security.oauth2.client.registration.oauth2-client-credentials.client-secret=NED2yO8nULgc4WtwdHfgkKVabjsde98x
spring.security.oauth2.client.registration.oauth2-client-credentials.scope=openid, profile, roles
spring.security.oauth2.client.registration.oauth2-client-credentials.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.oauth2-client-credentials.provider=keycloak
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/khonshu
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/khonshu


# DB

spring.datasource.url=jdbc:postgresql://localhost:5432/Khonshu
spring.datasource.username=postgres
spring.datasource.password=${DATASOURCE_PASSWORD}

hbm2ddl.auto=create

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

logging.level.org.springframework.security=TRACE